/**
 * @type {{ conn: mongoose.Connection | null, promise: Promise<mongoose.Connection> | null }}
 */

declare global {
  var mongoose: any; 
}

let cached = global.mongoose;

if (!cached) {
  cached = global.mongoose = { conn: null, promise: null };
}

async function dbConnect() {
  console.log("dbConnect");
  if (cached.conn) {
    return cached.conn;
  }

  if (!cached.promise) {
    const opts = {
      bufferCommands: false,
    };

    cached.promise = mongoose
      .connect(MONGODB_URI, opts)
      .then((mongoose) => {
        console.log("Successfully connected to MongoDB");
        return mongoose;
      })
      .catch((err) => {
        console.error("Failed to connect to MongoDB", err);
        throw err; // Re-throw the error after logging it
      });
  }
  cached.conn = await cached.promise;
  return cached.conn;